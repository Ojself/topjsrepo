{"version":3,"sources":["components/Repositories.js","components/Pagination.js","App.js","index.js"],"names":["Repositories","reposPerPage","currentPage","repoList","repos","map","repo","i","name","description","html_url","stargazers_count","created_at","listPosition","title","scope","id","href","rel","target","toLocaleString","slice","className","Pagination","totalRepos","paginate","pageNumbers","Math","ceil","push","number","boldFont","onClick","App","useState","setRepos","loading","setLoading","setCurrentPage","errorMessage","setErrorMessage","useEffect","a","axios","get","result","data","items","error","console","setTimeout","getRepos","indexOfLastRepo","indexOffirstRepo","currentRepos","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA4CeA,G,MAzCM,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,YAC9BC,EADuD,EAAZC,MAC1BC,KAAI,SAACC,EAAMC,GAAO,IAC/BC,EAA8DF,EAA9DE,KAAMC,EAAwDH,EAAxDG,YAAaC,EAA2CJ,EAA3CI,SAAUC,EAAiCL,EAAjCK,iBAAkBC,EAAeN,EAAfM,WACjDC,GAAgBX,EAAc,GAAKD,EAAeM,EAAI,EAC5D,OACE,qBAAYO,MAAOL,EAAnB,UACE,oBAAIM,MAAM,MAAV,SAAiBF,IACjB,6BACE,mBAAGG,GAAG,MAAMC,KAAMP,EAAUQ,IAAI,aAAaC,OAAO,SAApD,SACGX,MAGL,6BAAKG,EAAiBS,mBACtB,6BAAKR,EAAWS,MAAM,EAAG,OARlBd,MAab,OACE,wBAAOe,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,OAAOP,MAAM,MAA3B,eAGA,oBAAIO,UAAU,OAAOP,MAAM,MAA3B,kBAGA,oBAAIO,UAAU,OAAOP,MAAM,MAA3B,mBAGA,oBAAIO,UAAU,OAAOP,MAAM,MAA3B,0BAKJ,gCAAQZ,SCTCoB,EA5BI,SAAC,GAElB,IAF2E,IAAvDrB,EAAsD,EAAtDA,YAAaD,EAAyC,EAAzCA,aAAcuB,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACrDC,EAAc,GACXnB,EAAI,EAAGA,GAAKoB,KAAKC,KAAKJ,EAAavB,GAAeM,IACzDmB,EAAYG,KAAKtB,GAEnB,OACE,8BACE,oBAAIe,UAAU,aAAd,SACGI,EAAYrB,KAAI,SAACyB,EAAQvB,GAExB,IAAMwB,EAAW7B,IAAgB4B,EAAS,mBAAqB,GAC/D,OACE,oBAAYR,UAAS,oBAAeS,GAApC,SACE,mBACEC,QAAS,kBAAMP,EAASK,IACxBb,KAAK,KACLK,UAAU,YAHZ,SAKGQ,KANIvB,WCoDN0B,EAzDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACT9B,EADS,KACF+B,EADE,OAEcD,mBAAS,EAAC,IAFxB,mBAETE,EAFS,KAEAC,EAFA,OAGsBH,mBAAS,GAH/B,mBAGThC,EAHS,KAGIoC,EAHJ,OAIwBJ,mBAAS,IAJjC,mBAITK,EAJS,KAIKC,EAJL,KAchBC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,+EAEQC,IAAMC,IAnBjC,uGAiBmB,OAEPC,EAFO,OAGbV,EAASU,EAAOC,KAAKC,OAHR,gDARCC,EAaH,EAAD,GAZdC,QAAQD,MAAR,6BAAoCA,IACpCR,EAAgBQ,GAChBE,YAAW,WACTV,EAAgB,MACf,KAGc,QAOfH,GAAW,GAPI,kCARA,IAACW,IAQD,oBAAH,qDASdG,KACC,IAEH,IAAMC,EA/Bc,GA+BIlD,EAClBmD,EAAmBD,EAhCL,GAiCdE,EAAelD,EAAMiB,MAAMgC,EAAkBD,GAInD,OACE,sBAAK9B,UAAU,iBAAf,UACGiB,GAAgB,oBAAIvB,GAAG,eAAP,SAAuBuB,IACvCH,EACC,0CAEA,qCACE,cAAC,EAAD,CACElC,YAAaA,EACbD,aA9CU,GA+CVuB,WAAYpB,EAAMmD,OAClB9B,SAbO,SAAC+B,GAAD,OAAgBlB,EAAekB,MAexC,cAAC,EAAD,CACEvD,aAnDU,GAoDVC,YAAaA,EACbE,MAAOkD,WCrDnBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.497363e1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nconst Repositories = ({ reposPerPage, currentPage, repos }) => {\n  const repoList = repos.map((repo, i) => {\n    const { name, description, html_url, stargazers_count, created_at } = repo;\n    const listPosition = (currentPage - 1) * reposPerPage + i + 1;\n    return (\n      <tr key={i} title={description}>\n        <th scope=\"col\">{listPosition}</th>\n        <td>\n          <a id=\"url\" href={html_url} rel=\"noreferrer\" target=\"_blank\">\n            {name}\n          </a>\n        </td>\n        <td>{stargazers_count.toLocaleString()}</td>\n        <td>{created_at.slice(0, 4)}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th className=\"w-15\" scope=\"col\">\n            #\n          </th>\n          <th className=\"w-50\" scope=\"col\">\n            Name\n          </th>\n          <th className=\"w-25\" scope=\"col\">\n            Stars\n          </th>\n          <th className=\"w-30\" scope=\"col\">\n            Created\n          </th>\n        </tr>\n      </thead>\n      <tbody>{repoList}</tbody>\n    </table>\n  );\n};\n\nexport default Repositories;\n","import React from \"react\";\n\nconst Pagination = ({ currentPage, reposPerPage, totalRepos, paginate }) => {\n  const pageNumbers = []; // [1,2,3,4,5]\n  for (let i = 1; i <= Math.ceil(totalRepos / reposPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map((number, i) => {\n          // gives bold font to the current page number\n          const boldFont = currentPage === number ? \"font-weight-bold\" : \"\";\n          return (\n            <li key={i} className={`page-item ${boldFont}`}>\n              <a\n                onClick={() => paginate(number)}\n                href=\"#!\"\n                className=\"page-link\"\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Repositories from \"./components/Repositories\";\nimport Pagination from \"./components/Pagination\";\nconst REPO_PER_PAGE = 20;\nconst URL =\n  \"https://api.github.com/search/repositories?q=language:javascript&sort=stars&order=desc&per_page=100\";\n\nconst App = () => {\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState([true]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Renders error to front page and prints error message if fetch fails\n  const errHandler = (error) => {\n    console.error(`An error occured:\\n${error}`);\n    setErrorMessage(error);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 8000);\n  };\n  useEffect(() => {\n    const getRepos = async () => {\n      try {\n        const result = await axios.get(URL);\n        setRepos(result.data.items);\n      } catch (error) {\n        errHandler(error);\n      }\n      setLoading(false);\n    };\n    getRepos();\n  }, []);\n\n  const indexOfLastRepo = currentPage * REPO_PER_PAGE;\n  const indexOffirstRepo = indexOfLastRepo - REPO_PER_PAGE;\n  const currentRepos = repos.slice(indexOffirstRepo, indexOfLastRepo);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5\">\n      {errorMessage && <h4 id=\"errorMessage\">{errorMessage}</h4>}\n      {loading ? (\n        <p>Loading..</p>\n      ) : (\n        <>\n          <Pagination\n            currentPage={currentPage}\n            reposPerPage={REPO_PER_PAGE}\n            totalRepos={repos.length}\n            paginate={paginate}\n          />\n          <Repositories\n            reposPerPage={REPO_PER_PAGE}\n            currentPage={currentPage}\n            repos={currentRepos}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}